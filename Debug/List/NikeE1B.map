################################################################################
#                                                                              #
#      IAR Universal Linker V4.61L/W32                                         #
#                                                                              #
#           Link time     =  22/Mar/2010  20:31:38                             #
#           Target CPU    =  A90                                               #
#           List file     =  G:\AVR\EthRadio_buf_inline\Debug\List\NikeE1B.map #
#           Output file 1 =  G:\AVR\EthRadio_buf_inline\Debug\Exe\NikeE1B.hex  #
#                            Format: intel-standard, variant: -y(CODE)         #
#           Output file 2 =  G:\AVR\EthRadio_buf_inline\Debug\Exe\NikeE1B.ee.h #
#                            ex                                                #
#                            Format: intel-standard, variant: -y(XDATA)        #
#           Output file 3 =  G:\AVR\EthRadio_buf_inline\Debug\Exe\NikeE1B.ee.b #
#                            in                                                #
#                            Format: raw-binary, variant: -y(XDATA)            #
#           Command line  =  -y(CODE) -Ointel-standard,(XDATA)=.ee.hex         #
#                            -Oraw-binary,(XDATA)=.ee.bin                      #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\FIFO.r90     #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\enc28j60.r90 #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\http_get.r90 #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\io.r90       #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\kb.r90       #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\lcd.r90      #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\mac.r90      #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\main.r90     #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\md5cheat.r90 #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\network.r90  #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\nic.r90      #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\pages.r90    #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\station.r90  #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\stuff.r90    #
#                            G:\AVR\EthRadio_buf_inline\Debug\Obj\vs.r90 -o    #
#                            G:\AVR\EthRadio_buf_inline\Debug\Exe\NikeE1B.hex  #
#                            -Fintel-standard -l                               #
#                            G:\AVR\EthRadio_buf_inline\Debug\List\NikeE1B.map #
#                            -xmsnio                                           #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h Evaluation 5.3\avr\LIB\"                        #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            Evaluation 5.3\avr\src\template\cfgm32.xcl"       #
#                            (-D_..X_INTVEC_SIZE=58 -D_..X_FLASH_NEND=7FFF     #
#                            -D_..X_FLASH_END=7FFF -D_..X_SRAM_BASE=60         #
#                            -D_..X_SRAM_TBASE=_..X_SRAM_BASE                  #
#                            -D_..X_SRAM_TSIZE=(100-_..X_SRAM_BASE)            #
#                            -D_..X_SRAM_END=85F                               #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_END                #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_END                 #
#                            -D_..X_EXT_ROM_SIZE=0                             #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_END                  #
#                            -D_..X_EXT_NV_SIZE=0 -D_..X_EEPROM_END=3FF        #
#                            -D_..X_EEPROM_START=0) -ww22=i                    #
#                            -D_..X_HEAP_SIZE=10 -D_..X_TINY_HEAP_SIZE=0       #
#                            -D_..X_NEAR_HEAP_SIZE=0 -D_..X_FAR_HEAP_SIZE=0    #
#                            -D_..X_HUGE_HEAP_SIZE=0 -D_..X_CSTACK_SIZE=60     #
#                            -D_..X_RSTACK_SIZE=20 -f                          #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            Evaluation 5.3\avr\src\template\cfg3soim.xcl"     #
#                            (-ca90 -w29                                       #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -Z(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE- #
#                            _..X_CSTACK_END                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_CSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_CSTACK_END=_..X_SRAM_END                   #
#                            -D_..X_RSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_RSTACK_END=_..X_SRAM_END -s                #
#                            __program_start                                   #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            Evaluation 5.3\avr\LIB\CLIB\cl3s-ec_mul-sf.r90"   #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read                    #
#                                                                              #
#                           Copyright (C) 1987-2009 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  EEPROM_SIZE     = 2
  R10             = REG
  R11             = REG
  R12             = REG
  R13             = REG
  R4              = REG
  R5              = REG
  R6              = REG
  R7              = REG
  R8              = REG
  R9              = REG
  __64bit_doubles = disabled
  __cpu           = 3
  __cpu_name      = ATmega32
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_RSTACK_END         0000085F 
           _..X_RSTACK_BASE        00000060 
           _..X_CSTACK_END         0000085F 
           _..X_CSTACK_BASE        00000060 
           _..X_FLASH_BASE         00000058 
           _..X_RSTACK_SIZE        00000020 
           _..X_CSTACK_SIZE        00000060 
           _..X_HUGE_HEAP_SIZE     00000000 
           _..X_FAR_HEAP_SIZE      00000000 
           _..X_NEAR_HEAP_SIZE     00000000 
           _..X_TINY_HEAP_SIZE     00000000 
           _..X_HEAP_SIZE          00000010 
           _..X_EEPROM_START       00000000 
           _..X_EEPROM_END         000003FF 
           _..X_EXT_NV_SIZE        00000000 
           _..X_EXT_NV_BASE        0000085F 
           _..X_EXT_ROM_SIZE       00000000 
           _..X_EXT_ROM_BASE       0000085F 
           _..X_EXT_SRAM_SIZE      00000000 
           _..X_EXT_SRAM_BASE      0000085F 
           _..X_SRAM_END           0000085F 
           _..X_SRAM_TSIZE         000000A0 
           _..X_SRAM_TBASE         00000060 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00007FFF 
           _..X_FLASH_NEND         00007FFF 
           _..X_INTVEC_SIZE        00000058 
    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\FIFO.r90
  PROGRAM MODULE, NAME : FIFO

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 0000002E - 0000002E (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   GET_hook_DATA_RX (http_get)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   VS_INIT (vs)
                                                   VS_VOL (vs)
                                                   enc28j60Init (enc28j60)
                                                   enc28j60PacketReceive (enc28j60)
                                                   enc28j60PacketSend (enc28j60)
                                                   fifo_init
                                                   main (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPSR                 0000002E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002F - 0000002F (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   GET_hook_DATA_RX (http_get)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   VS_INIT (vs)
                                                   VS_VOL (vs)
                                                   enc28j60Init (enc28j60)
                                                   enc28j60PacketReceive (enc28j60)
                                                   enc28j60PacketSend (enc28j60)
                                                   fifo_init
                                                   main (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPDR                 0000002F 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000031 - 00000031 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   fifo_init
                                                   main (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 00000031 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000032 - 00000032 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   GET_hook_DATA_RX (http_get)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   enc28j60PacketReceive (enc28j60)
                                                   fifo_init
                                                   main (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                00000032 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000E0 - 000000EF (0x10 bytes), align: 0
  Segment part 11.            Intra module refs:   ETHfifo_free
                                                   MP3fifo_free
                                                   fifo_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETHfifo_pRD             000000E8        StartGET (http_get)
                                                   main (main)
           ETHfifo_pWR             000000EC        INT_ETH_PROCESS_PKT2 (network)
                                                   StartGET (http_get)
                                                   main (main)
           MP3fifo_pRD             000000E0        GET_hook_DATA_RX (http_get)
                                                   StartGET (http_get)
                                                   main (main)
           MP3fifo_pWR             000000E4        GET_hook_DATA_RX (http_get)
                                                   StartGET (http_get)
                                                   main (main)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000F0 - 000000F0 (0x1 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETHfifo_CNT             000000F0        INT_ETH_PROCESS_PKT2 (network)
                                                   StartGET (http_get)
                                                   main (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000CC8 - 00000D1F (0x58 bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETHfifo_free            00000CC8        INT_ETH_PROCESS_PKT2 (network)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D20 - 00000D29 (0xa bytes), align: 1
  Segment part 23.            Intra module refs:   ETHfifo_free
                                                   MP3fifo_free
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00000D20 
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETHfifo_len             
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D2A - 00000D89 (0x60 bytes), align: 1
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MP3fifo_free            00000D2A        GET_hook (http_get)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MP3fifo_len             
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D8A - 00000DE7 (0x5e bytes), align: 1
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fifo_init               00000D8A        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_F
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _EthWRlen               
    -------------------------------------------------------------------------
NEAR_F
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _EthTS                  
    -------------------------------------------------------------------------
NEAR_F
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _EthCNT                 
    -------------------------------------------------------------------------
NEAR_F
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _EthpWRH                
    -------------------------------------------------------------------------
NEAR_F
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _EthpWRL                
    -------------------------------------------------------------------------
NEAR_F
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _EthRDlen               
    -------------------------------------------------------------------------
NEAR_F
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _EthpRDH                
    -------------------------------------------------------------------------
NEAR_F
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _EthpRDL                
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fifo_test               
               not allocated function
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001C, align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001C        Segment part 0 (?EEPROM_16)
                                                   Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001D, align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 0000001D        __eeget16_16 (?EEPROM_16)
                                                   __eeget32_16 (?EEPROM_16)
                                                   __eeget8_16 (?EEPROM_16)
                                                   __eeput16_16 (?EEPROM_16)
                                                   __eeput8_16 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001E, align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                0000001E        Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                0000001F        Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
CSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00005E5A - 00005E5F (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   EEPROM_RESTORED (main)
                                                   ETHfifo_CNT
                                                   GET_WINDOW_STATE (http_get)
                                                   Keyboard_task (kb)
                                                   LCD_putMETA::pos (lcd)
                                                   MASK_IP (network)
                                                   Segment part 11
                                                   Segment part 12 (enc28j60)
                                                   Segment part 14 (network)
                                                   Segment part 32 (main)
                                                   debug_addr (network)
                                                   get_sock (http_get)
                                                   http_q_c (main)
                                                   http_q_c_pos (main)
                                                   http_sock (main)
                                                   stationNum (station)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   00005E5A 

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\enc28j60.r90
  PROGRAM MODULE, NAME : enc28j60

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPSR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000037 - 00000037 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   VS_INIT (vs)
                                                   enc28j60Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRB                 00000037 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000038 - 00000038 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   VS_INIT (vs)
                                                   VS_VOL (vs)
                                                   enc28j60Init
                                                   enc28j60PacketReceive
                                                   enc28j60PacketSend
                                                   main (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTB                00000038 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000F1 - 000000F3 (0x3 bytes), align: 0
  Segment part 12.            Intra module refs:   enc28j60Init
                                                   enc28j60PacketReceive
                                                   enc28j60PacketSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Enc28j60Bank            000000F3        main (main)
           NextPacketPtr           000000F1 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000DE8 - 0000185B (0xa74 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           enc28j60Init            00000DE8        nic_init (nic)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           enc28j60BeginPacketSend
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000185C - 00001B47 (0x2ec bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           enc28j60PacketSend      0000185C        INT_ETH_PROCESS_PKT2 (network)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001B48 - 00002021 (0x4da bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           enc28j60PacketReceive   00001B48        nic_poll (nic)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           enc28j60ReceiveOverflowRecover
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           enc28j60RegDump         
               not allocated function
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 8. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 9. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 13. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\http_get.r90
  PROGRAM MODULE, NAME : http_get

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPSR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000F4 - 00000144 (0x51 bytes), align: 0
  Segment part 12.            Intra module refs:   AddGETsocket
                                                   GET_hook
                                                   StartGET
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_sock                000000F4        T2_TASK (kb)
                                                   main (main)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000145 - 00000145 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GET_hook
                                                   GET_hook_DATA_RX
                                                   StartGET
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GET_WINDOW_STATE        00000145        main (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002022 - 00002049 (0x28 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddGETsocket            00002022        main (main)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000204A - 00002153 (0x10a bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StartGET                0000204A        SetupRegister (main)
                                                   main (main)
               calls direct
               CSTACK = 00000000 ( 00000008 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StopGET                 
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002154 - 0000217B (0x28 bytes), align: 1
  Segment part 19.            Intra module refs:   GET_hook_DATA_RX
           LOCAL                   ADDRESS         
           =====                   =======         
           a2i                     00002154 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000217C - 00002443 (0x2c8 bytes), align: 1
  Segment part 20.            Intra module refs:   GET_hook
           LOCAL                   ADDRESS         
           =====                   =======         
           GET_hook_DATA_RX        0000217C 
               calls direct
               CSTACK = 00000000 ( 0000000A )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002444 - 0000264D (0x20a bytes), align: 1
  Segment part 21.            Intra module refs:   AddGETsocket
           LOCAL                   ADDRESS         
           =====                   =======         
           GET_hook                00002444 
               calls direct
               CSTACK = 00000000 ( 0000000D )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000058 - 00000074 (0x1d bytes), align: 0
  Segment part 10.            Intra module refs:   GET_hook_DATA_RX
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000075 - 0000007B (0x7 bytes), align: 0
  Segment part 11.            Intra module refs:   GET_hook
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000007C - 000000D5 (0x5a bytes), align: 0
  Segment part 15.            Intra module refs:   GET_hook
           LOCAL                   ADDRESS         
           =====                   =======         
           GET_hook{1}{15}::req1   0000007C 
           GET_hook{1}{15}::req2   00000082 
           GET_hook{1}{15}::req3   00000093 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 13. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\io.r90
  PROGRAM MODULE, NAME : io

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000029 - 00000029 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRL                00000029 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002A - 0000002A (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRB                0000002A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002B - 0000002B (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   _print_fstr
                                                   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRA                0000002B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002C - 0000002C (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   _print_fstr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR                  0000002C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000040 - 00000040 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   uart_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRH                00000040 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000264E - 00002665 (0x18 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_init               0000264E        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _print_rn               
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _print_num              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002666 - 0000267B (0x16 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _print_fstr             00002666        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 8. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 9. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 11. NOT NEEDED.

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\kb.r90
  PROGRAM MODULE, NAME : kb

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000039 - 00000039 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   T2_TASK
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PINA                 00000039 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000003B - 0000003B (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   T2_TASK
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTA                0000003B 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000267C - 000026A9 (0x2e bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_TCPstate            0000267C        main (main)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000026AA - 000026D7 (0x2e bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_PLAYERstate         000026AA        main (main)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000026D8 - 00002743 (0x6c bytes), align: 1
  Segment part 16.            Intra module refs:   T2_TASK::??INTVEC 20
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_TASK                 000026D8 
               interrupt function
               CSTACK = 00000000 ( 00000003 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000146 - 00000147 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   T2_TASK
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Keyboard_task           00000146        main (main)
           LOCAL                   ADDRESS         
           =====                   =======         
           T2_TASK::T2INTdiv       00000147 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000017 (0x18 bytes), align: 1
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_TASK::??INTVEC 20    00000014 
    -------------------------------------------------------------------------
CSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 13. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000D6 - 000000F9 (0x24 bytes), align: 0
  Segment part 10.            Intra module refs:   LCD_TCPstate
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000000FA - 0000011F (0x26 bytes), align: 0
  Segment part 11.            Intra module refs:   LCD_PLAYERstate

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\lcd.r90
  PROGRAM MODULE, NAME : lcd

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000033 - 00000033 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   LCD_CMD
                                                   LCD_putc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PINC                 00000033 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000034 - 00000034 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LCD_CMD
                                                   LCD_init_4
                                                   LCD_putc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRC                 00000034 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000035 - 00000035 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LCD_CMD
                                                   LCD_init_4
                                                   LCD_putc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTC                00000035 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000059 - 00000059 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   InitEthernetHW (mac)
                                                   LCD_putMETA
                                                   main (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK                00000059 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002744 - 00002809 (0xc6 bytes), align: 1
  Segment part 15.            Intra module refs:   LCD_XY
                                                   LCD_init_4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_CMD                 00002744 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_DATA                
               not allocated function
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000120 - 00000123 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   LCD_putBR
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000124 - 00000163 (0x40 bytes), align: 0
  Segment part 12.            Intra module refs:   LCD_putc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WIN1251_tab             00000124 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000280A - 00002A7D (0x274 bytes), align: 1
  Segment part 17.            Intra module refs:   LCD_fprintline
                                                   LCD_fprintlineEE
                                                   LCD_fprintstr
                                                   LCD_putBR
                                                   LCD_putMETA
                                                   LCD_softCLR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_putc                0000280A 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002A7E - 00002A99 (0x1c bytes), align: 1
  Segment part 18.            Intra module refs:   LCD_putBR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_fprintstr           00002A7E 
               calls direct
               CSTACK = 00000000 ( 00000002 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_home                
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_CLS                 
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002A9A - 00002AB5 (0x1c bytes), align: 1
  Segment part 21.            Intra module refs:   LCD_fprintline
                                                   LCD_fprintlineEE
                                                   LCD_putBR
                                                   LCD_putMETA
                                                   LCD_softCLR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_XY                  00002A9A 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002AB6 - 00002B25 (0x70 bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_fprintlineEE        00002AB6        main (main)
               calls direct
               CSTACK = 00000000 ( 00000005 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002B26 - 00002B31 (0xc bytes), align: 1
  Segment part 23.            Intra module refs:   LCD_fprintline
                                                   LCD_fprintlineEE
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00002B26 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002B32 - 00002B9F (0x6e bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_fprintline          00002B32        GET_hook (http_get)
                                                   GET_hook_DATA_RX (http_get)
                                                   LCD_PLAYERstate (kb)
                                                   LCD_TCPstate (kb)
                                                   main (main)
               calls direct
               CSTACK = 00000000 ( 00000005 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002BA0 - 00002C41 (0xa2 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_init_4              00002BA0        main (main)
               calls direct
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002C42 - 00002D33 (0xf2 bytes), align: 1
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_putMETA             00002C42        GET_hook_DATA_RX (http_get)
               calls direct
               CSTACK = 00000000 ( 00000003 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000148 - 00000149 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   LCD_putMETA
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_putMETA::pos        00000148 
           LCD_putMETA::prevchar   00000149 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002D34 - 00002D55 (0x22 bytes), align: 1
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_putBR               00002D34        GET_hook_DATA_RX (http_get)
               calls direct
               CSTACK = 00000000 ( 00000002 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002D56 - 00002D6B (0x16 bytes), align: 1
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_softCLR             00002D56        GET_hook (http_get)
               calls direct
               CSTACK = 00000000 ( 00000001 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 8. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 14. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\mac.r90
  PROGRAM MODULE, NAME : mac

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000053 - 00000053 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   InitEthernetHW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR0                00000053 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from lcd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK                
    -------------------------------------------------------------------------
NEAR_N
  Relative segment, address: DATA 000002A1 - 00000816 (0x576 bytes), align: 0
  Segment part 9.             Intra module refs:   InitEthernetHW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETH_PKT                 000002A1        INT_ETH_PROCESS_PKT2 (network)
                                                   main (main)
                                                   nic_poll (nic)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002D6C - 00002D73 (0x8 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETH_STOP_BACK_PRESSURE
                                   00002D6C        INT_ETH_PROCESS_PKT2 (network)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002D74 - 00002D8B (0x18 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitEthernetHW          00002D74        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 8. NOT NEEDED.

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000022 - 00000022 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   INT_ETH_PROCESS_PKT2 (network)
                                                   INT_TIMER_DISPATCH (network)
                                                   TCPconnect (network)
                                                   TIMER_TASK (network)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TWAR                 00000022 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPSR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000030 - 00000030 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   VS_INIT (vs)
                                                   VS_VOL (vs)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PIND                 00000030 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from enc28j60
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTB                
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000045 - 00000045 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR2                00000045 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004A - 0000004B (0x2 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1A                0000004A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004E - 0000004E (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               0000004E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004F - 0000004F (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1A               0000004F 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 12. TENTATIVE. Used definition from lcd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK                
    -------------------------------------------------------------------------
NEAR_N
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MP3indic                
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000014A - 0000014A (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   HTTP_hook
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_q_c_pos            0000014A 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000014B - 00000192 (0x48 bytes), align: 0
  Segment part 26.            Intra module refs:   HTTP_hook
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_q_c                0000014B 
    -------------------------------------------------------------------------
EEPROM_AN
  Relative segment, address: XDATA 00000000 - 00000000 (0x1 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DUMMY_EEPROM            00000000 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000193 - 00000193 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   REFRESH_EEPROM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EEPROM_RESTORED         00000193 
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000001 - 00000036 (0x36 bytes), align: 0
  Segment part 28.            Intra module refs:   HTTP_hook_DATA_RX
                                                   HTTP_hook_DATA_TX
                                                   InitVars
                                                   REFRESH_EEPROM
                                                   SetupRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HTTP_LOGIN              00000017 
           HTTP_PASS               00000027 
           IP_EEPROM               00000005 
           MAC_EEPROM              00000011 
           MASK_IP_EEPROM          00000001 
           OUTG_IP                 00000009        StartGET (http_get)
    -------------------------------------------------------------------------
EEPROM_I
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_N
  Relative segment, address: DATA 00000817 - 00000836 (0x20 bytes), align: 0
  Segment part 29.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_BUFFER32             00000817 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002D8C - 00002DAB (0x20 bytes), align: 1
  Segment part 33.            Intra module refs:   HTTP_hook_DATA_RX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stradd_E                00002D8C 
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002DAC - 00002DB9 (0xe bytes), align: 1
  Segment part 34.            Intra module refs:   HTTP_hook_DATA_RX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stradd_P                00002DAC 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000194 - 00000281 (0xee bytes), align: 0
  Segment part 30.            Intra module refs:   AddHTTPsocket
                                                   HTTP_hook_DATA_RX
                                                   HTTP_hook_DATA_TX
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_sock               00000194 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002DBA - 00002DDF (0x26 bytes), align: 1
  Segment part 35.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddHTTPsocket           00002DBA 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002DE0 - 00002E07 (0x28 bytes), align: 1
  Segment part 36.            Intra module refs:   HTTP_hook_DATA_RX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stricmp_P               00002DE0        GET_hook_DATA_RX (http_get)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002E08 - 00002E0B (0x4 bytes), align: 1
  Segment part 37.            Intra module refs:   HTTP_hook_DATA_RX
                                                   HTTP_hook_DATA_TX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2a                     00002E08 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002E0C - 00002E11 (0x6 bytes), align: 1
  Segment part 38.            Intra module refs:   HTTP_hook_DATA_TX
           LOCAL                   ADDRESS         
           =====                   =======         
           __get_SVN_Revision      00002E0C 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002E12 - 00002E7F (0x6e bytes), align: 1
  Segment part 39.            Intra module refs:   HTTP_hook
                                                   HTTP_hook_DATA_RX
                                                   HTTP_hook_DATA_TX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsGoodHTTPreq           00002E12 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002E80 - 00002EC1 (0x42 bytes), align: 1
  Segment part 40.            Intra module refs:   HTTP_hook_DATA_RX
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           REFRESH_EEPROM          00002E80 
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SYNC_EE_                
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002EC2 - 00002F07 (0x46 bytes), align: 1
  Segment part 42.            Intra module refs:   HTTP_hook_DATA_RX
           LOCAL                   ADDRESS         
           =====                   =======         
           SetupRegister           00002EC2 
               calls direct
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002F08 - 00002F2F (0x28 bytes), align: 1
  Segment part 43.            Intra module refs:   HTTP_hook_DATA_RX
           LOCAL                   ADDRESS         
           =====                   =======         
           a2i                     00002F08 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00002F30 - 000034D1 (0x5a2 bytes), align: 1
  Segment part 44.            Intra module refs:   HTTP_hook
                                                   Segment part 50
           LOCAL                   ADDRESS         
           =====                   =======         
           HTTP_hook_DATA_RX       00002F30 
               calls direct
               CSTACK = 00000000 ( 00000007 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000034D2 - 0000387F (0x3ae bytes), align: 1
  Segment part 45.            Intra module refs:   HTTP_hook
           LOCAL                   ADDRESS         
           =====                   =======         
           HTTP_hook_DATA_TX       000034D2 
               calls direct
               CSTACK = 00000000 ( 00000006 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00003880 - 0000397D (0xfe bytes), align: 1
  Segment part 46.            Intra module refs:   AddHTTPsocket
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HTTP_hook               00003880 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000397E - 000039D3 (0x56 bytes), align: 1
  Segment part 47.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitVars                0000397E 
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDT_Prescaler_Change    
               not allocated function
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000282 - 00000284 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BufferPKT               00000283        INT_ETH_PROCESS_PKT2 (network)
           FIFO_pkt_TS             00000284        INT_ETH_PROCESS_PKT2 (network)
           PLAYER_STATE            00000282        GET_hook (http_get)
                                                   GET_hook_DATA_RX (http_get)
                                                   StartGET (http_get)
                                                   T2_TASK (kb)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000164 - 00000165 (0x2 bytes), align: 0
  Segment part 20.            Intra module refs:   __get_SVN_Revision
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000166 - 0000019A (0x35 bytes), align: 0
  Segment part 21.            Intra module refs:   HTTP_hook_DATA_RX
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000019B - 00000224 (0x8a bytes), align: 0
  Segment part 22.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Hello_string           000001C1 
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000225 - 0000022C (0x8 bytes), align: 0
  Segment part 31.            Intra module refs:   HTTP_hook_DATA_TX
           LOCAL                   ADDRESS         
           =====                   =======         
           HTTP_LEVELS             00000225 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000039D4 - 000046A7 (0xcd4 bytes), align: 1
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000039D4        ?cstartup_call_main (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 14. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 15. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 16. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 17. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 25. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 00000CA0 - 00000CC7 (0x28 bytes), align: 1
  Segment part 50.            Intra module refs:   HTTP_hook_DATA_RX

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\md5cheat.r90
  PROGRAM MODULE, NAME : md5cheat

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 0000005F - 0000005F (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   IPChecksum (network)
                                                   MD5cheat
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SREG                 0000005F 
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000022D - 000003AC (0x180 bytes), align: 0
  Segment part 8.             Intra module refs:   MD5cheat
           LOCAL                   ADDRESS         
           =====                   =======         
           table                   0000022D 
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           back_memmove            
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000046A8 - 000046B1 (0xa bytes), align: 1
  Segment part 11.            Intra module refs:   MD5cheat
           LOCAL                   ADDRESS         
           =====                   =======         
           _move                   000046A8 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000046B2 - 000046DB (0x2a bytes), align: 1
  Segment part 12.            Intra module refs:   MD5cheat
           LOCAL                   ADDRESS         
           =====                   =======         
           sum                     000046B2 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000046DC - 00004957 (0x27c bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MD5cheat                000046DC        HTTP_hook_DATA_RX (main)
               calls direct
               CSTACK = 00000000 ( 0000002E )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000003AD - 000003BC (0x10 bytes), align: 0
  Segment part 9.             Intra module refs:   MD5cheat
           LOCAL                   ADDRESS         
           =====                   =======         
           MD5cheat::state_init    000003AD 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 7. NOT NEEDED.

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\network.r90
  PROGRAM MODULE, NAME : network

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TWAR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPSR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from md5cheat
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SREG                 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004958, align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           netw_memcpy             00004958        HTTP_hook_DATA_RX (main)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004958 - 0000496B (0x14 bytes), align: 1
  Segment part 19.            Intra module refs:   INT_ETH_PROCESS_PKT2
                                                   netw_memcpy
           LOCAL                   ADDRESS         
           =====                   =======         
           _netw_memcpy            00004958 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000496C - 00004971 (0x6 bytes), align: 1
  Segment part 20.            Intra module refs:   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           cmp_A_S                 0000496C 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004972 - 00004975 (0x4 bytes), align: 1
  Segment part 21.            Intra module refs:   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           cmp_S_A                 00004972 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004976 - 00004999 (0x24 bytes), align: 1
  Segment part 22.            Intra module refs:   cmp_A_S
                                                   cmp_S_A
           LOCAL                   ADDRESS         
           =====                   =======         
           _cmp32                  00004976 
               RSTACK = 00000000 ( 00000002 )
           cmp32i_1                00004994 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000499A - 0000499B (0x2 bytes), align: 1
  Segment part 23.            Intra module refs:   INT_ETH_PROCESS_PKT2
                                                   set_state_SYN_RECEIVED
           LOCAL                   ADDRESS         
           =====                   =======         
           inc32                   0000499A 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000499C - 000049B7 (0x1c bytes), align: 1
  Segment part 24.            Intra module refs:   INT_ETH_PROCESS_PKT2
                                                   inc32
           LOCAL                   ADDRESS         
           =====                   =======         
           inc32i                  0000499C 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000049B8 - 000049F9 (0x42 bytes), align: 1
  Segment part 25.            Intra module refs:   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           IPChecksum              000049B8 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000049FA - 00004A13 (0x1a bytes), align: 1
  Segment part 26.            Intra module refs:   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           MACcpy                  000049FA 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004A14 - 00004A4D (0x3a bytes), align: 1
  Segment part 27.            Intra module refs:   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           MACcmp                  00004A14 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004A4E - 00004A5B (0xe bytes), align: 1
  Segment part 28.            Intra module refs:   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           _swapmem                00004A4E 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004A5C - 00004A6F (0x14 bytes), align: 1
  Segment part 29.            Intra module refs:   INT_ETH_PROCESS_PKT2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           netw_memset             00004A5C 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004A70 - 00004A89 (0x1a bytes), align: 1
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddTCPsocket            00004A70        AddGETsocket (http_get)
                                                   AddHTTPsocket (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RemoveTCPsocket         
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004A8A - 00004ACF (0x46 bytes), align: 1
  Segment part 32.            Intra module refs:   TCPconnect
                                                   set_state_SYN_RECEIVED
           LOCAL                   ADDRESS         
           =====                   =======         
           prepare_sock            00004A8A 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004AD0 - 00004B37 (0x68 bytes), align: 1
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TCPconnect              00004AD0        StartGET (http_get)
               calls direct
               CSTACK = 00000000 ( 00000001 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004B38 - 00004B55 (0x1e bytes), align: 1
  Segment part 34.            Intra module refs:   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           ClosingTCP              00004B38 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004B56 - 00004B5D (0x8 bytes), align: 1
  Segment part 35.            Intra module refs:   ClosingTCP
                                                   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           CallTCPhook_null        00004B56 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004B5E - 00004B67 (0xa bytes), align: 1
  Segment part 36.            Intra module refs:   CallTCPhook_null
                                                   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           CallTCPhook             00004B5E 
               calls indirect
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000285 - 00000299 (0x15 bytes), align: 0
  Segment part 14.            Intra module refs:   AddTCPsocket
                                                   INT_ETH_PROCESS_PKT2
                                                   TCPconnect
                                                   TIMER_TASK
                                                   prepare_sock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ETH_PKT_len             0000028D        main (main)
                                                   nic_poll (nic)
           ETH_PKT_mode            00000293        main (main)
                                                   nic_poll (nic)
           IP                      00000285        InitVars (main)
                                                   StartGET (http_get)
           IPSEQ                   00000291 
           MAC0                    00000294        InitVars (main)
                                                   enc28j60Init (enc28j60)
           QUE_sock                0000028F 
           _A_count_200ms_low      00000289        main (main)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000029A - 0000029D (0x4 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MASK_IP                 0000029A        InitVars (main)
                                                   StartGET (http_get)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004B68 - 00004B91 (0x2a bytes), align: 1
  Segment part 37.            Intra module refs:   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           ExtractMSS              00004B68 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004B92 - 00004BC5 (0x34 bytes), align: 1
  Segment part 38.            Intra module refs:   INT_ETH_PROCESS_PKT2
           LOCAL                   ADDRESS         
           =====                   =======         
           set_state_SYN_RECEIVED
                                   00004B92 
               calls direct
               CSTACK = 00000000 ( 00000002 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000029E - 0000029F (0x2 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debug_addr              0000029E        AddGETsocket (http_get)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00004BC6 - 00005AD5 (0xf10 bytes), align: 1
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           INT_ETH_PROCESS_PKT2    00004BC6        main (main)
               calls direct
               CSTACK = 00000000 ( 0000000C )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005AD6 - 00005B1F (0x4a bytes), align: 1
  Segment part 40.            Intra module refs:   INT_TIMER_DISPATCH
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TIMER_TASK              00005AD6 
               interrupt function
               CSTACK = 00000000 ( 00000005 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005B20 - 00005B21 (0x2 bytes), align: 1
  Segment part 41.            Intra module refs:   INT_ETH_PROCESS_PKT::??INTVEC 68
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           INT_ETH_PROCESS_PKT     00005B20 
               interrupt function
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005B22 - 00005B3D (0x1c bytes), align: 1
  Segment part 42.            Intra module refs:   INT_TIMER_DISPATCH::??INTVEC 40
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           INT_TIMER_DISPATCH      00005B22 
               interrupt function
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 8. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 9. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002B (0x2c bytes), align: 1
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           INT_TIMER_DISPATCH::??INTVEC 40
                                   00000028 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000047 (0x48 bytes), align: 1
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           INT_ETH_PROCESS_PKT::??INTVEC 68
                                   00000044 
    -------------------------------------------------------------------------
CSTACK
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 15. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\nic.r90
  PROGRAM MODULE, NAME : nic

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005B3E - 00005B41 (0x4 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nic_init                00005B3E        main (main)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005B42 - 00005B63 (0x22 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nic_poll                00005B42        main (main)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\pages.r90
  PROGRAM MODULE, NAME : pages

  SEGMENTS IN THE MODULE
  ======================
NEAR_F
  Relative segment, address: CODE 000003BD - 000003BF (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000003C0 - 000003D6 (0x17 bytes), align: 0
  Segment part 8.             Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000003D7 - 000003E5 (0xf bytes), align: 0
  Segment part 9.             Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000003E6 - 0000046A (0x85 bytes), align: 0
  Segment part 10.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000046B - 00000552 (0xe8 bytes), align: 0
  Segment part 11.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000553 - 00000609 (0xb7 bytes), align: 0
  Segment part 12.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000060A - 00000621 (0x18 bytes), align: 0
  Segment part 13.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000622 - 00000639 (0x18 bytes), align: 0
  Segment part 14.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000063A - 00000653 (0x1a bytes), align: 0
  Segment part 15.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000654 - 00000668 (0x15 bytes), align: 0
  Segment part 16.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000669 - 0000067A (0x12 bytes), align: 0
  Segment part 17.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000067B - 0000068B (0x11 bytes), align: 0
  Segment part 18.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000068C - 000006A5 (0x1a bytes), align: 0
  Segment part 19.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000006A6 - 000006AF (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000006B0 - 000006BD (0xe bytes), align: 0
  Segment part 21.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000006BE - 000006CA (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000006CB - 000006D1 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000006D2 - 00000702 (0x31 bytes), align: 0
  Segment part 24.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000703 - 00000709 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000070A - 00000711 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000712 - 0000071A (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000071B - 0000071F (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000720 - 0000073A (0x1b bytes), align: 0
  Segment part 29.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000073B - 00000741 (0x7 bytes), align: 0
  Segment part 30.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000742 - 00000747 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000748 - 00000755 (0xe bytes), align: 0
  Segment part 32.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000756 - 00000761 (0xc bytes), align: 0
  Segment part 33.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000762 - 00000764 (0x3 bytes), align: 0
  Segment part 34.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000765 - 00000769 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000076A - 00000773 (0xa bytes), align: 0
  Segment part 36.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000774 - 0000077D (0xa bytes), align: 0
  Segment part 37.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000077E - 00000780 (0x3 bytes), align: 0
  Segment part 38.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000781 - 0000078E (0xe bytes), align: 0
  Segment part 39.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000078F - 00000796 (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000797 - 0000079E (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000079F - 000007A1 (0x3 bytes), align: 0
  Segment part 42.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007A2 - 000007A8 (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007A9 - 000007AC (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007AD - 000007B3 (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007B4 - 000007B8 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007B9 - 000007BD (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007BE - 000007C1 (0x4 bytes), align: 0
  Segment part 48.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007C2 - 000007C4 (0x3 bytes), align: 0
  Segment part 49.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007C5 - 000007CE (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007CF - 000007D1 (0x3 bytes), align: 0
  Segment part 51.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007D2 - 000007D4 (0x3 bytes), align: 0
  Segment part 52.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007D5 - 000007DD (0x9 bytes), align: 0
  Segment part 53.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007DE - 000007E5 (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007E6 - 000007EA (0x5 bytes), align: 0
  Segment part 55.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007EB - 000007EE (0x4 bytes), align: 0
  Segment part 56.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007EF - 000007F6 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007F7 - 000007F9 (0x3 bytes), align: 0
  Segment part 58.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007FA - 000007FC (0x3 bytes), align: 0
  Segment part 59.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000007FD - 00000803 (0x7 bytes), align: 0
  Segment part 60.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000804 - 0000080A (0x7 bytes), align: 0
  Segment part 61.            Intra module refs:   CHUNKS
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000080B - 00000858 (0x4e bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_root               0000080B        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000859 - 0000090A (0xb2 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_z                  00000859        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000090B - 0000091B (0x11 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_root_level1        0000090B        HTTP_LEVELS (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000091C - 0000091C (0x1 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_root_level2        0000091C        HTTP_LEVELS (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000091D - 0000091D (0x1 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_root_level3        0000091D        HTTP_LEVELS (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000091E - 0000092C (0xf bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_401                0000091E        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000092D - 00000947 (0x1b bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_401stale           0000092D        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000948 - 00000954 (0xd bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_404                00000948        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000955 - 00000961 (0xd bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_302                00000955        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000962 - 0000096F (0xe bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_302z               00000962        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000970 - 0000097D (0xe bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_302s               00000970        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000097E - 000009AE (0x31 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_eeprom_refr_button
                                   0000097E        HTTP_LEVELS (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 000009AF - 00000C30 (0x282 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           http_s                  000009AF        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000C31 - 00000C9E (0x6e bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CHUNKS                  00000C31        HTTP_hook_DATA_TX (main)
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\station.r90
  PROGRAM MODULE, NAME : station

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 000002A0 - 000002A0 (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stationNum              000002A0        GET_hook (http_get)
                                                   InitVars (main)
                                                   StartGET (http_get)
                                                   main (main)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000037 - 00000037 (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stationNum_EEPROM       00000037        InitVars (main)
                                                   main (main)
    -------------------------------------------------------------------------
EEPROM_I
  Relative segment, address: XDATA 00000038 - 00000397 (0x360 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           station_list            00000038        GET_hook (http_get)
                                                   HTTP_hook_DATA_RX (main)
                                                   HTTP_hook_DATA_TX (main)
                                                   StartGET (http_get)
                                                   main (main)
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 8. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\stuff.r90
  PROGRAM MODULE, NAME : stuff

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005B64 - 00005BC1 (0x5e bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _i2a                    00005B64        GET_hook (http_get)
                                                   i2a (main)
           LOCAL                   ADDRESS         
           =====                   =======         
           ??i2a_0                 00005BA0 
           ??i2a_1                 00005BBA 

    *************************************************************************

  FILE NAME : G:\AVR\EthRadio_buf_inline\Debug\Obj\vs.r90
  PROGRAM MODULE, NAME : vs

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 0000002D - 0000002D (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   VS_INIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPCR                 0000002D 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPSR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PIND                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from enc28j60
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRB                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from enc28j60
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTB                
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_DATA                 
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_DATA32               
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005BC2 - 00005CD3 (0x112 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_INIT                 00005BC2        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_SOFTRST              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_SINTEST              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_NEW_SINTEST          
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_SINSWEEP             
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005CD4 - 00005D0D (0x3a bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_VOL                  00005CD4        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           VS_endFillByte          
               not allocated function
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 8. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 9. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 10. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 11. TENTATIVE. Used definition from FIFO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 13. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench Evaluation 5.3\avr\LIB\CLIB\cl3s-ec_mul-sf.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005D0E - 00005D13 (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  00005D10 
           ?C_EXIT                 00005D10 
           ?C_FUNCALL              00005D0E 
           _exit                   00005D0E        ?cstartup_call_main (?C_STARTUP)
           exit                    00005D0E        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (0x4 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D14, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              00005D14        Segment part 0 (?RESET)
           __RESTART               00005D14 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram_new_way
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D14 - 00005D1F (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?zero_reg_initialization
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D20 - 00005D23 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    00005D20 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D24 - 00005D2B (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      00005D24        ?<Segment init: NEAR_Z> (FIFO)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D2C - 00005D37 (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     00005D2C 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EEPROM_16

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005D38 - 00005D3D (0x6 bytes), align: 1
  Segment part 0.             Intra module refs:   Segment part 1
                                                   __eeput16_16
                                                   __eeput8_16
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D3E - 00005D4B (0xe bytes), align: 1
  Segment part 1.             Intra module refs:   __eeget16_16
                                                   __eeget32_16
                                                   __eeget8_16
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D4C - 00005D51 (0x6 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget8_16             00005D4C        GET_hook (http_get)
                                                   HTTP_hook_DATA_RX (main)
                                                   HTTP_hook_DATA_TX (main)
                                                   InitVars (main)
                                                   LCD_fprintlineEE (lcd)
                                                   REFRESH_EEPROM (main)
                                                   main (main)
                                                   stradd_E (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D52 - 00005D5B (0xa bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget16_16            00005D52        HTTP_hook_DATA_TX (main)
                                                   StartGET (http_get)
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget24_16            
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D5C - 00005D6D (0x12 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget32_16            00005D5C        GET_hook (http_get)
                                                   HTTP_hook_DATA_TX (main)
                                                   InitVars (main)
                                                   StartGET (http_get)
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget64_16            
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D6E - 00005D7F (0x12 bytes), align: 1
  Segment part 8.             Intra module refs:   __eeput16_16
                                                   __eeput8_16
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D80 - 00005D87 (0x8 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput8_16             00005D80        HTTP_hook_DATA_RX (main)
                                                   REFRESH_EEPROM (main)
                                                   SetupRegister (main)
                                                   main (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005D88 - 00005D95 (0xe bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput16_16            00005D88        HTTP_hook_DATA_RX (main)
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput24_16            
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput32_16            
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput64_16            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005D96 - 00005DA1 (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_L02              00005D96        LCD_init_4 (lcd)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR4_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R4_is_cg_reg
                                   00005DA2        GET_hook (http_get)
                                                   GET_hook_DATA_RX (http_get)
                                                   HTTP_hook_DATA_RX (main)
                                                   HTTP_hook_DATA_TX (main)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   LCD_fprintline (lcd)
                                                   LCD_fprintlineEE (lcd)
                                                   MD5cheat (md5cheat)
                                                   StartGET (http_get)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR5_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R5_is_cg_reg
                                   00005DA2        GET_hook (http_get)
                                                   GET_hook_DATA_RX (http_get)
                                                   HTTP_hook_DATA_RX (main)
                                                   HTTP_hook_DATA_TX (main)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   MD5cheat (md5cheat)
                                                   StartGET (http_get)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR6_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R6_is_cg_reg
                                   00005DA2        GET_hook (http_get)
                                                   GET_hook_DATA_RX (http_get)
                                                   HTTP_hook_DATA_RX (main)
                                                   HTTP_hook_DATA_TX (main)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   MD5cheat (md5cheat)
                                                   StartGET (http_get)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR7_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R7_is_cg_reg
                                   00005DA2        GET_hook (http_get)
                                                   GET_hook_DATA_RX (http_get)
                                                   HTTP_hook_DATA_RX (main)
                                                   HTTP_hook_DATA_TX (main)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   MD5cheat (md5cheat)
                                                   StartGET (http_get)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR8_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R8_is_cg_reg
                                   00005DA2        GET_hook (http_get)
                                                   GET_hook_DATA_RX (http_get)
                                                   HTTP_hook_DATA_RX (main)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   MD5cheat (md5cheat)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR9_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R9_is_cg_reg
                                   00005DA2        GET_hook (http_get)
                                                   GET_hook_DATA_RX (http_get)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   MD5cheat (md5cheat)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR10_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R10_is_cg_reg
                                   00005DA2        GET_hook (http_get)
                                                   GET_hook_DATA_RX (http_get)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   MD5cheat (md5cheat)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR11_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R11_is_cg_reg
                                   00005DA2        GET_hook_DATA_RX (http_get)
                                                   INT_ETH_PROCESS_PKT2 (network)
                                                   MD5cheat (md5cheat)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR12_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R12_is_cg_reg
                                   00005DA2        MD5cheat (md5cheat)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR13_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R13_is_cg_reg
                                   00005DA2        MD5cheat (md5cheat)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA2 - 00005DA5 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00005DA2        ?call_low_level_init (?C_STARTUP)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DA6 - 00005DAD (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                00005DA6 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005DAE - 00005DB5 (0x8 bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              00005DAE 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005DB6 - 00005DC1 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00005DC2 - 00005DF5 (0x34 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          00005DC2        ?need_segment_init (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 7. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcpy

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005DF6 - 00005E0B (0x16 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy                  00005DF6        HTTP_hook_DATA_RX (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005E0C - 00005E1F (0x14 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  00005E0C        HTTP_hook_DATA_RX (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strncmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00005E20 - 00005E59 (0x3a bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strncmp                 00005E20        HTTP_hook_DATA_RX (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000047 (0x48 bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 00000048 - 00000057 (0x10 bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                CODE      DATA         XDATA
------                ----      ----         -----
                     (Rel)  (Rel)  (Abs)  (Rel)  (Abs)
?C_STARTUP              36
?EEPROM_16              94
?FILLER_BYTES           16
  + common              72
?RESET
  + common               4
?S_SHL_L02              12
?__exit                  6
?low_level_init          4
?segment_init           80
?strcpy                 22
?strlen                 20
?strncmp                58
FIFO                   288     17
  + shared               6             4
enc28j60             4 666      3
  + shared                             2
http_get             1 706     82
io                      46             5
kb                     274      2      2
  + common              24
lcd                  1 644      2      3
  + shared                             1
mac                     32  1 398      1
main                 6 669    347      5     54      1
  + shared                             2
md5cheat             1 088
  + shared                             1
network              4 582     27
  + common              72
nic                     38
pages                2 274
station                         1           865
stuff                   94
vs                     332             1
N/A (command line)            128
N/A (alignment)
----------          ------  -----     --    ---      -
Total:              24 087  2 007     27    919      1
  + common              72


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000000 00000000
  01  T2_TASK
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000003 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000003 00000002


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000003 00000002
  01  TIMER_TASK
      | Stack used (prev) :  00000003 00000002
      | + function block  :  00000005 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000008 00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000008 00000004
  01  INT_ETH_PROCESS_PKT
      | Stack used (prev) :  00000008 00000004
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000008 00000006


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000008 00000006
  02    TIMER_TASK
        | Stack used (prev) :  00000003 00000002
        | + function block  :  00000005 00000002
        |  Already listed
  01  INT_TIMER_DISPATCH
      | Stack used (prev) :  00000008 00000006
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000008 00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK   RSTACK
    | Stack used (prev) :  00000008 00000008
  04        LCD_CMD
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
  04        LCD_CMD
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  04        LCD_CMD
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  04        LCD_CMD
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  03      LCD_XY
          | Stack used (prev) :  00000008 0000000A
          | + function block  :  00000000 00000002
  03      LCD_putc
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  02    LCD_softCLR
        | Stack used (prev) :  00000008 0000000C
        | + function block  :  00000001 00000002
  03      LCD_XY
          | Stack used (prev) :  00000008 0000000A
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_XY
          | Stack used (prev) :  00000008 0000000A
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_putc
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_putc
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  02    LCD_fprintline
        | Stack used (prev) :  00000008 0000000C
        | + function block  :  00000005 00000002
  03      stricmp_P
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  04        LCD_XY
            | Stack used (prev) :  00000008 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  05          LCD_putc
              | Stack used (prev) :  00000008 00000008
              | + function block  :  00000000 00000002
              |  Already listed
  04        LCD_fprintstr
            | Stack used (prev) :  00000008 0000000A
            | + function block  :  00000002 00000002
  04        LCD_putc
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  03      LCD_putBR
          | Stack used (prev) :  0000000A 0000000C
          | + function block  :  00000002 00000002
  04        LCD_XY
            | Stack used (prev) :  00000008 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LCD_XY
            | Stack used (prev) :  00000008 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LCD_XY
            | Stack used (prev) :  00000008 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LCD_XY
            | Stack used (prev) :  00000008 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LCD_putc
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  04        LCD_putc
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  04        LCD_putc
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  04        LCD_putc
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  03      LCD_putMETA
          | Stack used (prev) :  00000008 0000000C
          | + function block  :  00000003 00000002
  03      LCD_fprintline
          | Stack used (prev) :  00000008 0000000C
          | + function block  :  00000005 00000002
          |  Already listed
  03      a2i
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  02    GET_hook_DATA_RX
        | Stack used (prev) :  0000000D 0000000E
        | + function block  :  0000000A 00000002
  02    MP3fifo_free
        | Stack used (prev) :  00000008 00000008
        | + function block  :  00000000 00000002
  01  GET_hook
      | Stack used (prev) :  00000017 00000010
      | + function block  :  0000000D 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000024 00000012


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK   RSTACK
    | Stack used (prev) :  00000008 00000008
  03      IsGoodHTTPreq
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  03      __get_SVN_Revision
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  03      i2a
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  03      i2a
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      i2a
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      i2a
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      i2a
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      i2a
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      i2a
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      i2a
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  02    HTTP_hook_DATA_TX
        | Stack used (prev) :  00000008 00000008
        | + function block  :  00000006 00000004
  03      strncmp
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  03      strlen
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  03      strcpy
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  04        _netw_memcpy
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
  03      netw_memcpy
          | Stack used (prev) :  00000008 0000000A
          | + function block  :  00000000 00000002
  04        sum
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
  04        _move
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
  04        _move
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  03      MD5cheat
          | Stack used (prev) :  00000008 0000000A
          | + function block  :  0000002E 00000002
  03      a2i
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  03      a2i
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      a2i
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  06            prepare_sock
                | Stack used (prev) :  00000008 00000008
                | + function block  :  00000000 00000002
  05          TCPconnect
              | Stack used (prev) :  00000008 0000000A
              | + function block  :  00000001 00000002
  04        StartGET
            | Stack used (prev) :  00000009 0000000C
            | + function block  :  00000008 00000002
  03      SetupRegister
          | Stack used (prev) :  00000011 0000000E
          | + function block  :  00000000 00000002
  03      SetupRegister
          | Stack used (prev) :  00000011 0000000E
          | + function block  :  00000000 00000002
          |  Already listed
  03      REFRESH_EEPROM
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000004
  03      IsGoodHTTPreq
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      IsGoodHTTPreq
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      IsGoodHTTPreq
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      IsGoodHTTPreq
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      IsGoodHTTPreq
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      i2a
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      stricmp_P
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      stricmp_P
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      stricmp_P
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      stricmp_P
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      stradd_P
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
  03      stradd_E
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000004
  03      stradd_E
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000004
          |  Already listed
  02    HTTP_hook_DATA_RX
        | Stack used (prev) :  00000036 00000010
        | + function block  :  00000007 00000002
  02    IsGoodHTTPreq
        | Stack used (prev) :  00000008 00000008
        | + function block  :  00000000 00000002
        |  Already listed
  01  HTTP_hook
      | Stack used (prev) :  0000003D 00000012
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000003D 00000014


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000003D 00000014
  02    VS_VOL
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000002
  02    VS_INIT
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000002
  03      enc28j60PacketReceive
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  02    nic_poll
        | Stack used (prev) :  0000003D 00000016
        | + function block  :  00000000 00000002
  03      enc28j60Init
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  02    nic_init
        | Stack used (prev) :  0000003D 00000016
        | + function block  :  00000000 00000002
  04        prepare_sock
            | Stack used (prev) :  00000008 00000008
            | + function block  :  00000000 00000002
            |  Already listed
  05          inc32i
              | Stack used (prev) :  0000003D 00000014
              | + function block  :  00000000 00000002
  04        inc32
            | Stack used (prev) :  0000003D 00000016
            | + function block  :  00000000 00000002
  03      set_state_SYN_RECEIVED
          | Stack used (prev) :  0000003D 00000018
          | + function block  :  00000002 00000002
  03      set_state_SYN_RECEIVED
          | Stack used (prev) :  0000003D 00000018
          | + function block  :  00000002 00000002
          |  Already listed
  03      ExtractMSS
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  03      ExtractMSS
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      ExtractMSS
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  03      CallTCPhook
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  04        CallTCPhook
            | Stack used (prev) :  0000003D 00000014
            | + function block  :  00000000 00000002
            |  Already listed
  03      CallTCPhook_null
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
  03      CallTCPhook_null
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook_null
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook_null
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook_null
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      CallTCPhook_null
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  04        CallTCPhook_null
            | Stack used (prev) :  0000003D 00000016
            | + function block  :  00000000 00000002
            |  Already listed
  03      ClosingTCP
          | Stack used (prev) :  0000003D 00000018
          | + function block  :  00000000 00000002
  03      ClosingTCP
          | Stack used (prev) :  0000003D 00000018
          | + function block  :  00000000 00000002
          |  Already listed
  03      ClosingTCP
          | Stack used (prev) :  0000003D 00000018
          | + function block  :  00000000 00000002
          |  Already listed
  03      ClosingTCP
          | Stack used (prev) :  0000003D 00000018
          | + function block  :  00000000 00000002
          |  Already listed
  03      ClosingTCP
          | Stack used (prev) :  0000003D 00000018
          | + function block  :  00000000 00000002
          |  Already listed
  03      netw_memset
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  03      netw_memset
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      _swapmem
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  03      _swapmem
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcmp
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  03      MACcmp
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      MACcpy
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      IPChecksum
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  03      IPChecksum
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      IPChecksum
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      IPChecksum
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      IPChecksum
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      IPChecksum
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      IPChecksum
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      inc32i
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      inc32i
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      inc32i
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  03      inc32
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      inc32
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      inc32
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      inc32
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      inc32
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  04        _cmp32
            | Stack used (prev) :  0000003D 00000014
            | + function block  :  00000000 00000002
  03      cmp_S_A
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
  03      cmp_S_A
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      cmp_S_A
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  04        _cmp32
            | Stack used (prev) :  0000003D 00000014
            | + function block  :  00000000 00000002
            |  Already listed
  03      cmp_A_S
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
  03      cmp_A_S
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      cmp_A_S
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      cmp_A_S
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      cmp_A_S
          | Stack used (prev) :  0000003D 00000016
          | + function block  :  00000000 00000002
          |  Already listed
  03      _netw_memcpy
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      _netw_memcpy
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      ETH_STOP_BACK_PRESSURE
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  03      enc28j60PacketSend
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  03      ETHfifo_free
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  02    INT_ETH_PROCESS_PKT2
        | Stack used (prev) :  0000003F 0000001A
        | + function block  :  0000000C 00000002
  02    InitVars
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000004
  03      AddTCPsocket
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
  02    AddHTTPsocket
        | Stack used (prev) :  0000003D 00000016
        | + function block  :  00000000 00000002
  02    InitEthernetHW
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000002
  03      LCD_CMD
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_CMD
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_CMD
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_CMD
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_CMD
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  02    LCD_init_4
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000004
  02    LCD_fprintline
        | Stack used (prev) :  00000008 0000000C
        | + function block  :  00000005 00000002
        |  Already listed
  03      LCD_XY
          | Stack used (prev) :  00000008 0000000A
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_XY
          | Stack used (prev) :  00000008 0000000A
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_putc
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  03      LCD_putc
          | Stack used (prev) :  00000008 00000008
          | + function block  :  00000000 00000002
          |  Already listed
  02    LCD_fprintlineEE
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000005 00000004
  03      LCD_fprintline
          | Stack used (prev) :  00000008 0000000C
          | + function block  :  00000005 00000002
          |  Already listed
  02    LCD_PLAYERstate
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000002
  03      LCD_fprintline
          | Stack used (prev) :  00000008 0000000C
          | + function block  :  00000005 00000002
          |  Already listed
  02    LCD_TCPstate
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000002
  02    _print_fstr
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000002
  02    uart_init
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000002
  02    StartGET
        | Stack used (prev) :  00000009 0000000C
        | + function block  :  00000008 00000002
        |  Already listed
  03      AddTCPsocket
          | Stack used (prev) :  0000003D 00000014
          | + function block  :  00000000 00000002
          |  Already listed
  02    AddGETsocket
        | Stack used (prev) :  0000003D 00000016
        | + function block  :  00000000 00000002
  02    fifo_init
        | Stack used (prev) :  0000003D 00000014
        | + function block  :  00000000 00000002
  01  main
      | Stack used (prev) :  0000004B 0000001C
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000004B 0000001E


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000004B 0000001E
  01  __low_level_init
      | Stack used (prev) :  0000004B 0000001E
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000004B 00000020


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000004B 00000020
  02    __flashcpy
        | Stack used (prev) :  0000004B 00000020
        | + function block  :  00000000 00000002
  02    __memclr
        | Stack used (prev) :  0000004B 00000020
        | + function block  :  00000000 00000002
  01  __segment_init
      | Stack used (prev) :  0000004B 00000022
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000004B 00000024




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000047          48   com    1
?FILL1               CODE          00000048 - 00000057          10   rel    0
NEAR_F               CODE          00000058 - 00000C9E         C47   rel    0
SWITCH               CODE          00000CA0 - 00000CC7          28   rel    1
CODE                 CODE          00000CC8 - 00005E59        5192   rel    1
INITTAB              CODE          00005E5A - 00005E5F           6   rel    0
ABSOLUTE             DATA               0000001C                     rel    0
                     DATA               0000001D                   
                     DATA               0000001E                   
                     DATA               0000001F                   
                     DATA          00000022 - 00000022           1 
                     DATA          00000029 - 00000035           D 
                     DATA          00000037 - 00000039           3 
                     DATA          0000003B - 0000003B           1 
                     DATA          00000040 - 00000040           1 
                     DATA          00000045 - 00000045           1 
                     DATA          0000004A - 0000004B           2 
                     DATA          0000004E - 0000004F           2 
                     DATA          00000053 - 00000053           1 
                     DATA          00000059 - 00000059           1 
                     DATA          0000005F - 0000005F           1 
CSTACK               DATA          00000060 - 000000BF          60   dse    0
RSTACK               DATA          000000C0 - 000000DF          20   dse    0
NEAR_I               DATA               000000E0                     dse    0
NEAR_Z               DATA          000000E0 - 000002A0         1C1   rel    0
NEAR_N               DATA          000002A1 - 00000836         596   rel    0
EEPROM_AN            XDATA         00000000 - 00000000           1   rel    0
EEPROM_I             XDATA         00000001 - 00000397         397   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 24 143 bytes of CODE  memory (+             16 range fill )
  2 007 bytes of DATA  memory (+ 27 absolute )
    919 bytes of XDATA memory (+  1 absolute )

Errors: none
Warnings: none

