###############################################################################
#                                                                             #
#                                                       17/Feb/2010  18:41:43 #
# IAR C/C++ Compiler V5.30.0.20166/W32, Evaluation Version  for Atmel AVR     #
# Copyright 1996-2009 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  G:\AVR\EthRadio_buf_inline\nic.c                         #
#    Command line =  --string_literals_in_flash G:\AVR\EthRadio_buf_inline\ni #
#                    c.c --cpu=m32 -ms -o G:\AVR\EthRadio_buf_inline\Debug\Ob #
#                    j\ -lC G:\AVR\EthRadio_buf_inline\Debug\List\ -lB        #
#                    G:\AVR\EthRadio_buf_inline\Debug\List\                   #
#                    --initializers_in_flash -s9 --no_code_motion --debug     #
#                    -DENABLE_BIT_DEFINITIONS -e -I "C:\Program Files\IAR     #
#                    Systems\Embedded Workbench Evaluation 5.3\avr\INC\" -I   #
#                    "C:\Program Files\IAR Systems\Embedded Workbench         #
#                    Evaluation 5.3\avr\INC\CLIB\" --eeprom_size 1024         #
#                    --lock_regs=1                                            #
#    List file    =  G:\AVR\EthRadio_buf_inline\Debug\List\nic.lst            #
#    Object file  =  G:\AVR\EthRadio_buf_inline\Debug\Obj\nic.r90             #
#                                                                             #
#                                                                             #
###############################################################################

G:\AVR\EthRadio_buf_inline\nic.c
      1          
      2          #include "nic.h"
      3          #include "nike_e.h"
      4          #include "io.h"
      5          
      6          

   \                                 In  segment CODE, align 2, keep-with-next
      7          void nic_init(void)
   \                     nic_init:
      8          {
      9          	NICInit();
   \   00000000   ........           JMP     enc28j60Init
     10          }
     11          

   \                                 In  segment CODE, align 2, keep-with-next
     12          unsigned int nic_poll(void)
   \                     nic_poll:
     13          {        
     14                  unsigned int packetLength;         
     15                  packetLength=NICRetreivePacketData(ETH_MAX_PACKET_SIZE/*+3*/, (unsigned char *)ETH_PKT.hdr.dst_mac);
   \   00000000   ....               LDI     R18, LOW(ETH_PKT)
   \   00000002   ....               LDI     R19, (ETH_PKT) >> 8
   \   00000004   E706               LDI     R16, 118
   \   00000006   E015               LDI     R17, 5
   \   00000008   ........           CALL    enc28j60PacketReceive
     16                  if (packetLength)
   \   0000000C   2F20               MOV     R18, R16
   \   0000000E   2B21               OR      R18, R17
   \   00000010   F039               BREQ    ??nic_poll_0
     17                  {
     18                    ETH_PKT_len=packetLength;        
   \   00000012   9300....           STS     ETH_PKT_len, R16
   \   00000016   9310....           STS     (ETH_PKT_len + 1), R17
     19                    ETH_PKT_mode=1;               
   \   0000001A   E021               LDI     R18, 1
   \   0000001C   9320....           STS     ETH_PKT_mode, R18
     20                  }           		        
     21          	return packetLength;	
   \                     ??nic_poll_0:
   \   00000020   9508               RET
     22                  
     23          }

   Maximum stack usage in bytes:

     Function                   CSTACK RSTACK
     --------                   ------ ------
     nic_init                       0      2
       -> enc28j60Init              0      2
     nic_poll                       0      2
       -> enc28j60PacketReceive     0      2


   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     nic_init          4
     nic_poll         34

 
 38 bytes in segment CODE
 
 38 bytes of CODE memory

Errors: none
Warnings: none
